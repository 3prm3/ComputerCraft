
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath "com.anatawa12.forge:ForgeGradle:2.3-1.0.1"
        classpath 'org.ajoberstar:gradle-git:1.6.0'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.ajoberstar.grgit'

repositories {
    jcenter()
    mavenCentral()
    maven { url = "http://maven.shadowfacts.net/" }
}

version = "1.80pr1"
group = "dan200.computercraft"
archivesBaseName = "ComputerCraft"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "net.shadowfacts:Forgelin:1.8.4"
}

jar {
    manifest {
        attributes('FMLAT': 'computercraft_at.cfg')
    }
}

sourceSets {
    main { output.resourcesDir = output.classesDir }
}

import org.ajoberstar.grgit.Grgit

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    def grgit = Grgit.open(dir: '.')
    inputs.property "commithash", grgit.head().id

    def blacklist = ['GitHub', 'dan200', 'Daniel Ratcliffe']
    Set<String> contributors = []

    grgit.log().each {
        if (!blacklist.contains(it.author.name)) contributors.add(it.author.name)
        if (!blacklist.contains(it.committer.name)) contributors.add(it.committer.name)
    }

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'assets/computercraft/lua/rom/help/credits.txt'

        expand 'version':project.version,
               'mcversion':project.minecraft.version,
               'gitcontributors':contributors.sort(false, String.CASE_INSENSITIVE_ORDER).join('\n')
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'assets/computercraft/lua/rom/help/credits.txt'
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint"
    }
}

